// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projetoCaixa.Data;

#nullable disable

namespace projetoCaixa.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230519235323_VendasRelacionamento")]
    partial class VendasRelacionamento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projetoCaixa.Entites.ItensVenda", b =>
                {
                    b.Property<int>("IdVenda")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<float>("ValorUnitario")
                        .HasColumnType("real");

                    b.HasKey("IdVenda", "IdProduct");

                    b.ToTable("ItensVendas");
                });

            modelBuilder.Entity("projetoCaixa.Entites.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estoque")
                        .HasColumnType("int");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VendasIdProduct")
                        .HasColumnType("int");

                    b.Property<int?>("VendasIdVenda")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VendasIdVenda", "VendasIdProduct");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("projetoCaixa.Entites.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ItensVendaIdProduct")
                        .HasColumnType("int");

                    b.Property<int?>("ItensVendaIdVenda")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<float>("ValorTotal")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ItensVendaIdVenda", "ItensVendaIdProduct");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("projetoCaixa.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("projetoCaixa.Entites.Product", b =>
                {
                    b.HasOne("projetoCaixa.Models.User", "Users")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projetoCaixa.Entites.ItensVenda", "Vendas")
                        .WithMany("Products")
                        .HasForeignKey("VendasIdVenda", "VendasIdProduct");

                    b.Navigation("Users");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("projetoCaixa.Entites.Venda", b =>
                {
                    b.HasOne("projetoCaixa.Entites.ItensVenda", "ItensVenda")
                        .WithMany("Vendas")
                        .HasForeignKey("ItensVendaIdVenda", "ItensVendaIdProduct");

                    b.Navigation("ItensVenda");
                });

            modelBuilder.Entity("projetoCaixa.Entites.ItensVenda", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("projetoCaixa.Models.User", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
